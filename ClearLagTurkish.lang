####----> Commands -->
command.error.wrongUsage({usage},{name})=&cYanlış kullanım: &8/&7lagg {name} {usage}
command.error.noPermission({name})=&c&8/&7lagg {name} &ckomutunu kullanmaya yetkin yok!
command.error.onlyForPlayer()=&cBu komut yalnızca oyuncular tarafından kullanılabilir!

##]-> /lagg
command.lagg.nopermission()=&cBu komutu kullanmaya yetkin yok!
command.lagg.header()=&3-------------(&b&lClearlag Komutların&3)-------------
command.lagg.footer()=&3----------------------------------------------------
command.lagg.helpline({name},{desc})= &4- &8/&3lagg &b{name} &f -  {desc}

##]-> /lagg admin
command.admin.name()=admin
command.admin.desc()=(Clearlag modüllerini kontrol et)
command.admin.usage()=
command.admin.enabledModules({moduleList})=&aYeniden yüklenebilir modüller: &7{moduleList}
command.admin.noReloadableFields({module})={module} &cyeniden yüklenebilir alan içermiyor!
command.admin.notEnabled({module})=&cBu modül etkin değil!
command.admin.reload({module})=&a{module} modülü yeniden yüklendi!
command.admin.failedReload({module})=&c{module} modülü yeniden yüklenemedi
command.admin.invalidModule({argument})=&cGeçersiz modül: {argument}
command.admin.enabledModules({modules})=&aEtkin Modüller: &7{modules}
command.admin.stoppedModule({module})=&a{module} modülü &cdurduruldu&a!
command.admin.startableModules({modules})=&aBaşlatılabilir Modüller: &7{modules}
command.admin.alreadyEnabled({module})=&cBu modül zaten etkin!
command.admin.enabled({module})=&a{module} modülü etkinleştirildi!
command.admin.moduleStatus({listeners},{commands},{tasks},{modules})={
&3=--------------[&6-&3] &b&lModül Durumu &3[&6-&3]----------------=
              &8[&7Gri = Devre Dışı&8]   &8[&aYeşil = Etkin&8]
&6Dinleyiciler: {commands}
&6Komutlar: {commands}
&6Görevler: {tasks}
&6Modüller: {modules}
}
command.admin.help()={
&3=-------------[&6-&3] &b&lModül Komutları &3[&6-&3]---------------=
&4  - &3/lagg admin &creload &b<modül>
&4  - &3/lagg admin &cstop &b<modül>
&4  - &3/lagg admin &cstart &b<modül>
&4  - &3/lagg admin &clist
&3-----------------------------------------------------
}

##]-> /lagg area
command.area.name()=area
command.area.usage()=<yarıçap>
command.area.desc()=(Belirtilen yarıçap içindeki varlıkları temizler)
command.area.error({arg})=&4Geçersiz argüman belirtildi&8: &c{arg}
command.area.message({removed},{radius})=&6[&aClearLag&6] &3{removed} &bvarlık {radius} blok yarıçapında temizlendi!

##]-> /lagg checkchunk
command.checkchunk.name()=checkchunk
command.checkchunk.usage()=
command.checkchunk.desc()=(Chunk’taki varlıkları gösterir)
command.checkchunk.header()=&4*&3&m                            &8(&a&lChunk Bilgisi&8)&3&m                              &4*
command.checkchunk.tilelist()=&3 Blok Varlıkları&8:
command.checkchunk.entitylist()=&3 Varlıklar&8:
command.checkchunk.line({count},{type})=   &8- &ax{count} &7{type}
command.checkchunk.footer()=&4*&3&m                                                                             &4*

##]-> /lagg check
command.check.name()=check
command.check.usage()=[dünya1, dünya2...]
command.check.desc()=(Dünyandaki varlıkları sayar)
command.check.invalidworld({arg})=&4Geçersiz dünya belirtildi&8: {arg}
command.check.header()=&4*&3&m                          &8(&a&lSunucu Durumu&8)&3&m                           &4*
command.check.printed({removed1},{mobs},{animals},{players},{chunks},{activehoppers},{inactivehoppers},{spawners},{uptime},{tps},{usedmemory},{maxmemory},{freememory})={
&3   Yerdeki eşyalar: &b{removed1}
&3   Canlı yaratıklar: &b{mobs}
&3   Dost yaratıklar: &b{animals}
&3   Oyuncular: &b{players}
&3   Yüklü chunklar: &b{chunks}
&3   Aktif huniler: &b{activehoppers}
&3   Boşta huniler: &b{inactivehoppers}
&3   Aktif spawnerlar: &b{spawners}
&3   Çalışma süresi: &b{uptime}
&3   Anlık TPS: &b{tps}
&3   RAM Kullanımı: &b{usedmemory}&7/&b{maxmemory} &7MB
&3   Boş RAM: &b{freememory} &7MB
}
command.check.footer()=&4*&3&m                                                                             &4*

##]-> /lagg chunk
command.chunk.name()=chunk
command.chunk.usage()=[liste-boyutu]
command.chunk.desc()=(Lag yapan chunkları bulur)
command.chunk.header()=&7&m                           &7( &bEn Büyük Chunklar &7)&m                           "
command.chunk.print({order},{world},{x},{z},{count})=&4{order}&7) &3Dünya: &b{world}  &3x: &b{x}  &3z: &b{z}  &3Varlıklar: &b{count}

##]-> /lagg clear
command.clear.name()=clear
command.clear.usage()=
command.clear.desc()=(Dünyandaki varlıkları temizler)
command.clear.message({count})=&6[&aClearLag&6] &a&b{count} &3varlık temizlendi!

##]-> /lagg gc
command.gc.name()=gc
command.gc.usage()=
command.gc.desc()=(Çöp toplayıcıyı çalıştırır)
command.gc.message()=&6[&aClearLag&6] &a&bHemen çöp toplama işlemi başlatılıyor! &7(Uyarı: Java VM zaten belleği verimli şekilde boşaltır. Bu komutu yalnızca hata ayıklamak veya büyük bellek temizliği zorlamak için kullanın)

##]-> /lagg halt
command.halt.name()=halt
command.halt.usage()=[on/off]
command.halt.desc()=(Çoğu sunucu aktivitesini durdurur)
command.halt.halted()=&6[&aClearLag&6] &a&bSunucu aktiviteleri &cdurduruldu&b!
command.halt.unhalted()=&6[&aClearLag&6] &a&bSunucu aktiviteleri artık durdurulmadı!

##]-> /lagg killmobs
command.killmobs.name()=killmobs
command.killmobs.usage()=
command.killmobs.desc()=(Dünyandaki yaratıkları temizler)
command.killmobs.message({count})=&6[&aClearLag&6] &a&3{count} &byaratık temizlendi!

##]-> /lagg profile
command.profile.name()=profile
command.profile.usage()=<örnek-saniye> <örnek-tipi>
command.profile.desc()=(Lag yapan olayları profille)
command.profile.invalidtime({arg})=&4Geçersiz örnek süresi belirtildi&8: &c{arg}
command.profile.invalidprofiler({arg},{profilers})={
&4Geçersiz Profiler belirtildi&8: &c{arg}
&cGeçerli Profiler’lar&8: &7{profilers}
}
command.profile.nosamples()=&cÖrnek süresi boyunca hiçbir örnek kaydedilmedi
command.profile.header()=&7&m                           &7( &bChunk Örnekleri &7)&m
command.profile.line({listing},{world},{x},{z},{samples})=&4{listing}&7) &3Dünya: &b{world}&7, &3x: &b{x}&7, &3z: &b{z}   &3Örnek Sayısı: &b{samples}
command.profile.started({time})=&6[&aClearLag&6] &aProfiler başlatıldı, &7{time} &asaniye çalışacak

##]-> /lagg reload
command.reload.name()=reload
command.reload.usage()=
command.reload.desc()=(Clearlag’i yeniden yükler)
command.reload.begin()=&6[&aClearLag&6] &bModüller yeniden yükleniyor...
command.reload.successful()=&6[&aClearLag&6] &bModüller yeniden yüklendi!

##]-> /lagg samplememory
command.samplememory.name()=samplememory
command.samplememory.usage()=<örnek-saniye>
command.samplememory.desc()=(Bellek/Çöp toplama kullanımı örnekle)
command.samplememory.invalidinteger({arg})=&4Geçersiz tam sayı belirtildi&8: &c{arg}
command.samplememory.begin({time})=&aBellek örnekleyici &7{time} &asaniye boyunca çalıştırılıyor
command.samplememory.header()=&4*&3&m                       &8(&a&lBellek Tick İstatistikleri&8)&3&m                        &4*
command.samplememory.memory({high},{average})={
&aBellek (MB cinsinden):
&3   En yüksek bellek kullanımı: &b{high}
&3   Ortalama bellek kullanımı: &b{average}
}
command.samplememory.gc({total},{highest},{lowest},{averagetime},{averageticks})={
&aÇöp Toplayıcı (Tick bazlı, milisaniye cinsinden):
&3   Toplam GC işlemleri (Tick bazlı): &b{total}
&3   En yüksek GC süresi: &b{highest}
&3   En düşük GC süresi: &b{lowest}
&3   Ortalama GC süresi: &b{averagetime}
&3   Toplam GC arası ortalama tick: &b{averageticks}
}
command.samplememory.notenoughtime()=&cÇöp toplayıcı sonuçları için yeterince uzun örnek süresi verilmedi

##]-> /lagg sampleticks
command.sampleticks.name()=sampleticks
command.sampleticks.usage()=[örnek-tick] [raw/stats]
command.sampleticks.desc()=(Sunucunun tick’lerini örnekle)
command.sampleticks.start({threadname},{time})=&a&7{threadname} &aüzerinde tam tick örnekleme başlatıldı, &7{time} &atick boyunca çalışacak &7(Tahmini, %100 doğru değil)
command.sampleticks.rawheader()=&cHam tick süreleri: &7(Normal tick süresi 0-50ms arasındadır)
command.sampleticks.rawprint({time})=&8 - {time}
command.sampleticks.print({large},{small},{average},{spikes})={
&aTick İstatistikleri: &7(Normal tick süresi 0-50ms arasındadır)
&3   En uzun tick: {large}
&3   En kısa tick: {small}
&3   Ortalama tick: {average}
&3   Ani yükselmeler: {spikes}
}

##]-> /lagg tpchunk
command.tpchunk.name()=tpchunk
command.tpchunk.usage()=<x> <z> [dünya]
command.tpchunk.desc()=(Chunklara ışınlanır)
command.tpchunk.begin()=&6[&aClearLag&6] &bModüller yeniden yükleniyor...
command.tpchunk.successful()=&6[&aClearLag&6] &bModüller yeniden yüklendi!
command.tpchunk.invalidinteger({arg})=&4Geçersiz tam sayı belirtildi&8: &c{arg}
command.tpchunk.invalidworld({arg})=&4Dünya bulunamadı&8: &c{arg}
command.tpchunk.teleported({x},{z})=&6[&aClearLag&6] &bChunk’a ışınlandın: &3{x}&7, &3{z}

##]-> /lagg tps
command.tps.name()=tps
command.tps.usage()=
command.tps.desc()=(Sunucunun ortalama tick hızını gösterir)
command.tps.print({tps})=&6[&aClearLag&6] &a{tps}

##]-> /lagg unloadchunks
command.unloadchunks.name()=unloadchunks
command.unloadchunks.usage()=
command.unloadchunks.desc()=(Kullanılmayan chunkları boşaltır)
command.unloadchunks.print({chunks})=&6[&aClearLag&6] &3{chunks} &bchunk boşaltıldı!

##]-> /lagg memory
command.memory.name()=memory
command.memory.usage()=[tick-hızı]
command.memory.desc()=(Heap bilgisini görüntüle)
command.memory.message()=&3Listelenen bellek havuzlarında JVM heap örnekleme başlatıldı
command.memory.invalidinteger({arg})=&4Geçersiz poll hızı belirtildi&8: &c{arg}

##]-> /lagg performance
command.performance.name()=performance
command.performance.usage()=[tick-hızı]
command.performance.desc()=(Sunucu performansını görüntüle)
command.performance.message()=&3İş parçacığı örnekleme başlatıldı (&1uyku&3 daha iyidir!)
command.performance.invalidinteger({arg})=&4Geçersiz poll hızı belirtildi&8: &c{arg}
